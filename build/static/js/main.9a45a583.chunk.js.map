{"version":3,"sources":["components/header/header.module.scss","components/blog-page/blog-page.module.scss","components/tasks-page/list/task-item.module.scss","components/tasks-page/tasks-page.module.scss","components/tasks-page/navbar/navbar.module.scss","assets/logo.svg","components/footer/footer.module.scss","components/user-page/user-page.module.scss","components/tasks-page/form/task-form.module.scss","components/tasks-page/list/task-list.module.scss","components/header/header.jsx","components/footer/footer.jsx","components/user-page/user-page.jsx","localDB.js","reducers/blog.js","components/blog-page/blog-page.jsx","components/blog-page/container.jsx","reducers/tasks.js","components/tasks-page/form/task-form.jsx","components/tasks-page/list/task-item.jsx","components/tasks-page/list/task-list.jsx","components/tasks-page/navbar/navbar.jsx","components/tasks-page/tasks-page.jsx","components/tasks-page/container.jsx","components/app.jsx","serviceWorker.js","reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Header","className","s","container","logo","to","exact","src","alt","link","activeClassName","active","Footer","UserPage","localDB","get","name","localStorage","JSON","parse","set","value","stringify","initialState","posts","db","inputText","blogReducer","state","action","type","payload","post","id","Date","getTime","text","lastModified","unshift","newPosts","filter","BlogPage","addPost","removePost","changePostText","wrap","map","index","key","item","remove","onClick","e","onSubmit","preventDefault","onChange","target","connect","blogPage","dispatch","postId","changeNewPostTextCreator","STATUSES","Object","freeze","do","doing","done","tasks","folders","showAll","activeFolder","tasksReducer","folderId","task","find","status","tasks1","task1","folder","TaskForm","addNewTask","changeNewTaskText","placeholder","TaskItem","checked","doneTask","unDoneTask","removeTask","control","href","TaskList","filteredTasks","Array","isArray","sort","a","b","list","NavBar","changeFolder","TasksPage","content","aside","taskPage","changeNewTaskTextCreator","doneTaskCreator","unDoneTaskCreator","removeTaskCreator","App","path","Boolean","window","location","hostname","match","reducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a45a583.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__1eNc5\",\"logo\":\"header_logo__2B3Ne\",\"logo-title\":\"header_logo-title__1oRgp\",\"logo-img\":\"header_logo-img__1259V\",\"top-nav\":\"header_top-nav__3oLzT\",\"link\":\"header_link__fvZN9\",\"active\":\"header_active__1DMg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"blog-page_wrap__vdyWz\",\"item\":\"blog-page_item__1hzOG\",\"remove\":\"blog-page_remove__1WzIu\",\"new-post\":\"blog-page_new-post__3Pb2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"task-item_item__1DSSc\",\"input-container\":\"task-item_input-container__11a_A\",\"control\":\"task-item_control__1aD3f\",\"done\":\"task-item_done__1QJLq\",\"name\":\"task-item_name__1GYhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tasks-page_container__3jvYH\",\"content\":\"tasks-page_content__3lLNe\",\"aside\":\"tasks-page_aside__13JRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"folders\":\"navbar_folders__3gdj9\",\"active\":\"navbar_active__28LJH\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d61c3928.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__2LHad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"user-page_container__3moKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"task-form_container__2y09k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"task-list_list__OB6Lq\"};","import React     from 'react';\r\nimport s         from './header.module.scss';\r\nimport logo      from '../../assets/logo.svg';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n  <header className={s.container}>\r\n    <div className={s['left-part']}>\r\n      <NavLink\r\n        className={s.logo}\r\n        to='/'\r\n        exact\r\n      >\r\n        <img src={logo} className={s['logo-img']} alt=\"logo\" />\r\n        <span className={s['logo-title']}>Tonodo</span>\r\n      </NavLink>\r\n    </div>\r\n    <div className={s['top-nav']}>\r\n      <NavLink to='/' exact className={s.link} activeClassName={s.active}>Задачи</NavLink>\r\n      <NavLink to='/blog' className={s.link} activeClassName={s.active}>Блог</NavLink>\r\n      <NavLink to='/settings' className={s.link} activeClassName={s.active}>Настройки</NavLink>\r\n      <NavLink to='/profile' className={s.link} activeClassName={s.active}>Профиль</NavLink>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './footer.module.scss';\r\n\r\nconst Footer = () => (\r\n  <footer className={s.container}>\r\n    &copy; 2019\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport s from './user-page.module.scss';\r\n\r\nconst UserPage = () => (\r\n  <div className={s.container}>userpage</div>\r\n)\r\n\r\nexport default UserPage;\r\n","const localDB = {\r\n  get(name) {\r\n    return localStorage[name] && JSON.parse(localStorage[name]);\r\n  },\r\n  set(name, value) {\r\n    localStorage[name] = JSON.stringify(value);\r\n    return value;\r\n  }\r\n};\r\n\r\nexport default localDB;\r\n","import db from '../localDB';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst CHANGE_NEW_POST_TEXT = 'CHANGE_NEW_POST_TEXT';\r\nconst REMOVE_POST = 'REMOVE_POST';\r\n\r\nconst initialState =  {\r\n  posts: db.get('posts') || [],\r\n  inputText: '',\r\n};\r\n\r\nconst blogReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_POST:\r\n      if(state.inputText) {\r\n        const post = {\r\n          id: new Date().getTime(),\r\n          text: state.inputText,\r\n          lastModified: new Date().getTime(),\r\n        };\r\n        state.posts.unshift(post);\r\n        db.set('posts', state.posts);\r\n        return {\r\n          ...state,\r\n          inputText: '',\r\n          posts: state.posts\r\n        }\r\n      }\r\n      return state;\r\n    case CHANGE_NEW_POST_TEXT:\r\n      return {...state, inputText: payload.text};\r\n    case REMOVE_POST:\r\n      const newPosts = state.posts.filter(post => post.id !== payload.id);\r\n      db.set('posts', newPosts);\r\n      return {...state, posts: newPosts};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blogReducer;\r\n\r\n\r\nexport const addPostCreator = () => ({\r\n  type: ADD_POST,\r\n});\r\n\r\nexport const changeNewPostTextCreator = (text) => ({\r\n  type: CHANGE_NEW_POST_TEXT,\r\n  payload: { text },\r\n});\r\n\r\nexport const removePostCreator = (id) => ({\r\n  type: REMOVE_POST,\r\n  payload: { id },\r\n});\r\n\r\n","import React from 'react';\r\nimport s     from './blog-page.module.scss';\r\n\r\nconst BlogPage = ({\r\n  addPost,\r\n  removePost,\r\n  changePostText,\r\n  posts,\r\n  inputText,\r\n}) => (\r\n  <div className={s.wrap}>\r\n    <div className={s.container}>\r\n      {posts && posts.map((post, index) => (\r\n          <div\r\n            key={index}\r\n            className={s.item}\r\n          >\r\n            <p>{post.text}</p>\r\n            <span\r\n              className={s.remove}\r\n              onClick={e => removePost(post.id)}\r\n            >\r\n              x\r\n            </span>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n\r\n    <form\r\n      className={s['new-post']}\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        addPost();\r\n      }}\r\n    >\r\n      <textarea\r\n        onChange={(e) => changePostText(e.target.value)}\r\n        value={inputText}\r\n      />\r\n      <input type='submit' value='New Post' />\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default BlogPage;\r\n","import {\r\n  addPostCreator,\r\n  changeNewPostTextCreator,\r\n  removePostCreator\r\n}                from '../../reducers/blog';\r\nimport BlogPage  from './blog-page';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  const { blogPage } = state;\r\n  return ({\r\n    posts: blogPage.posts,\r\n    inputText: blogPage.inputText,\r\n  })\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>  ({\r\n  removePost: postId => dispatch(removePostCreator(postId)),\r\n  addPost: () => dispatch(addPostCreator()),\r\n  changePostText: text => dispatch(changeNewPostTextCreator(text)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogPage);\r\n","import db from '../localDB';\r\n\r\nconst ADD_TASK = 'ADD_TASK';\r\nconst REMOVE_TASK = 'REMOVE_TASK';\r\nconst DONE_TASK = 'DONE_TASK';\r\nconst UN_DONE_TASK = 'UN_DONE_TASK';\r\nconst CHANGE_NEW_TASK_TEXT = 'CHANGE_NEW_TASK_TEXT';\r\nconst CHANGE_FOLDER = 'CHANGE_FOLDER';\r\n\r\nconst STATUSES = Object.freeze({\r\n  do: 'do',\r\n  doing: 'doing',\r\n  done: 'done',\r\n});\r\n\r\nconst initialState = {\r\n  tasks : db.get('tasks') || [],\r\n  inputText: '',\r\n  folders: [\r\n    {id: 1, name: 'Все', showAll: true},\r\n    {id: 2, name: 'Дела'},\r\n    {id: 3, name: 'Покупки'},\r\n  ],\r\n  activeFolder: {id: 1, name: 'Все', showAll: true},\r\n}\r\n\r\nconst tasksReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      if(state.inputText) {\r\n        state.tasks.unshift(\r\n          {\r\n            id: new Date().getTime(),\r\n            text: state.inputText,\r\n            folderId: state.activeFolder.id,\r\n            lastModified: new Date().getTime(),\r\n          }\r\n        );\r\n        state.inputText = '';\r\n      }\r\n      db.set('tasks', state.tasks);\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks,\r\n      };\r\n    case REMOVE_TASK:\r\n      db.set('tasks', state.tasks);\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task.id !== payload.id),\r\n      };\r\n    case DONE_TASK:\r\n      const tasks = [...state.tasks];\r\n      const task = tasks.find(task => task.id === payload.id);\r\n      task.status = STATUSES.done;\r\n      task.lastModified = new Date().getTime();\r\n      db.set('tasks', tasks);\r\n      return {\r\n        ...state,\r\n        tasks,\r\n      };\r\n    case UN_DONE_TASK:\r\n      const tasks1 = [...state.tasks];\r\n      const task1 = tasks1.find(task => task.id === payload.id);\r\n      task1.status = STATUSES.do;\r\n      task1.lastModified = new Date().getTime();\r\n      db.set('tasks', tasks1);\r\n      return {\r\n        ...state,\r\n        tasks: tasks1\r\n      };\r\n    case CHANGE_NEW_TASK_TEXT:\r\n      return {\r\n        ...state,\r\n        inputText: payload.text,\r\n      };\r\n    case CHANGE_FOLDER:\r\n      return {\r\n        ...state,\r\n        activeFolder:  state.folders.find(folder => folder.id === payload.id),\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default tasksReducer;\r\n\r\n\r\nexport const addTaskCreator = () => ({\r\n  type: ADD_TASK,\r\n});\r\nexport const removeTaskCreator = (id) => ({\r\n  type: REMOVE_TASK,\r\n  payload: { id },\r\n});\r\nexport const doneTaskCreator = (id) => ({\r\n  type: DONE_TASK,\r\n  payload: { id }\r\n});\r\nexport const unDoneTaskCreator = (id) => ({\r\n  type: UN_DONE_TASK,\r\n  payload: { id },\r\n});\r\nexport const changeNewTaskTextCreator = (text) => ({\r\n  type: CHANGE_NEW_TASK_TEXT,\r\n  payload: { text },\r\n});\r\nexport const changeFolderCreator = (id) => ({\r\n  type: CHANGE_FOLDER,\r\n  payload: { id },\r\n});\r\n","import React from 'react';\r\nimport s  from './task-form.module.scss';\r\n\r\nconst TaskForm = ({\r\n  inputText,\r\n  addNewTask,\r\n  changeNewTaskText,\r\n}) => (\r\n  <form\r\n    onSubmit={e => {\r\n      e.preventDefault();\r\n      addNewTask();\r\n    }}\r\n    className={s.container}>\r\n    <input\r\n      type=\"text\"\r\n      placeholder='Введи задачу'\r\n      onChange={e => changeNewTaskText(e.target.value)}\r\n      value={inputText}\r\n    />\r\n    <button>ok</button>\r\n  </form>\r\n);\r\n\r\nexport default TaskForm;\r\n","import React from 'react';\r\nimport s     from './task-item.module.scss';\r\n\r\nconst TaskItem = ({\r\n  id,\r\n  checked,\r\n  text,\r\n  doneTask,\r\n  unDoneTask,\r\n  removeTask,\r\n}) => {\r\n  return (\r\n    <div className={`${s.item} ${checked ? s.done : ''}`}>\r\n      <div className={s.name}>\r\n          <span className={s['input-container']}>\r\n            <input\r\n              name={`task-${id}`}\r\n              type='checkbox'\r\n              onChange={e => checked ? unDoneTask(id) : doneTask(id)}\r\n              checked={checked}\r\n            />\r\n          </span>\r\n        {text}\r\n      </div>\r\n      <div className={s.control}>\r\n        <a\r\n          href={`/remove-task/${id}`}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            removeTask(id);\r\n          }}\r\n        >\r\n          x\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TaskItem;\r\n","import React    from 'react';\r\nimport s        from './task-list.module.scss';\r\nimport TaskItem from './task-item';\r\n\r\nconst TaskList = ({\r\n  tasks,\r\n  activeFolder,\r\n  doneTask,\r\n  unDoneTask,\r\n  removeTask,\r\n}) => {\r\n  const filteredTasks = Array.isArray(tasks) &&\r\n    tasks\r\n      .filter(task => task.folderId === activeFolder.id || activeFolder.showAll)\r\n      .sort((a, b) => a.lastModified < b.lastModified);\r\n\r\n  return (\r\n  <div className={s.list}>\r\n    {filteredTasks && filteredTasks.map(({ id, status, text }, index) => (\r\n      <TaskItem\r\n        key={index}\r\n        id={id}\r\n        checked={status==='done'}\r\n        text={text}\r\n        doneTask={doneTask}\r\n        unDoneTask={unDoneTask}\r\n        removeTask={removeTask}\r\n      />\r\n    ))}\r\n  </div>\r\n)};\r\n\r\nexport default TaskList;\r\n","import React                 from 'react';\r\nimport s                     from './navbar.module.scss';\r\n\r\nconst NavBar = ({\r\n  changeFolder,\r\n  activeFolder,\r\n  folders,\r\n}) => (\r\n  <div className={s.container}>\r\n    <ul className={s.folders}>\r\n      {folders && folders.map((folder, index) => (\r\n        <li\r\n          key={index}\r\n          className={activeFolder.id === folder.id ? s.active : ''}\r\n          onClick={() => changeFolder(folder.id)}\r\n        >\r\n          {folder.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default NavBar;\r\n","import React     from 'react';\r\nimport s         from './tasks-page.module.scss';\r\nimport TaskForm  from './form/task-form';\r\nimport TaskList  from './list/task-list';\r\nimport NavBar    from './navbar/navbar';\r\n\r\nconst TasksPage = ({\r\n  inputText,\r\n  tasks,\r\n  folders,\r\n  activeFolder,\r\n  addNewTask,\r\n  changeNewTaskText,\r\n  doneTask,\r\n  unDoneTask,\r\n  removeTask,\r\n  changeFolder,\r\n}) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <main className={s.content}>\r\n        <TaskForm\r\n          addNewTask={addNewTask}\r\n          changeNewTaskText={changeNewTaskText}\r\n          inputText={inputText}\r\n        />\r\n        <TaskList\r\n          tasks={tasks}\r\n          activeFolder={activeFolder}\r\n          doneTask={doneTask}\r\n          unDoneTask={unDoneTask}\r\n          removeTask={removeTask}\r\n        />\r\n      </main>\r\n\r\n      <div className={s.aside}>\r\n        <NavBar\r\n          activeFolder={activeFolder}\r\n          folders={folders}\r\n          changeFolder={changeFolder}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default TasksPage;\r\n","import {\r\n  addTaskCreator, changeFolderCreator,\r\n  changeNewTaskTextCreator,\r\n  doneTaskCreator, removeTaskCreator, unDoneTaskCreator\r\n}                from '../../reducers/tasks';\r\nimport {connect} from 'react-redux';\r\nimport TasksPage from './tasks-page';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { taskPage } = state;\r\n  return ({\r\n    inputText: taskPage.inputText,\r\n    tasks: taskPage.tasks,\r\n    activeFolder: taskPage.activeFolder,\r\n    folders: taskPage.folders,\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addNewTask: () => dispatch(addTaskCreator()),\r\n  changeNewTaskText: text => dispatch(changeNewTaskTextCreator(text)),\r\n  doneTask: id => dispatch(doneTaskCreator(id)),\r\n  unDoneTask: id => dispatch(unDoneTaskCreator(id)),\r\n  removeTask: id => dispatch(removeTaskCreator(id)),\r\n  changeFolder: folderId => dispatch(changeFolderCreator(folderId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksPage);\r\n","import React                          from 'react';\nimport './app.scss';\nimport Header                         from './header/header';\nimport Footer                         from './footer/footer';\nimport UserPage                       from './user-page/user-page';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport BlogPage                       from './blog-page/container';\nimport TasksPage                      from './tasks-page/container';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='wrapper'>\n        <Header  />\n        <div className='middle'>\n          <Switch>\n            <Route path='/settings'>\n              <h1>Настройки</h1>\n            </Route>\n            <Route path='/profile'>\n              <UserPage />\n            </Route>\n            <Route path='/blog'>\n              <BlogPage />\n            </Route>\n            <Route path='/'>\n              <TasksPage />\n            </Route>\n          </Switch>\n        </div>\n        <Footer  />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import blogReducer       from './blog';\r\nimport tasksReducer      from './tasks';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst reducer = combineReducers({\r\n  blogPage: blogReducer,\r\n  taskPage: tasksReducer\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React              from 'react';\nimport ReactDOM           from 'react-dom';\nimport App                from './components/app.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport store              from './redux/store';\nimport {Provider}         from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}