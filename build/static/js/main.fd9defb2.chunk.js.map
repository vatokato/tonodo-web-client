{"version":3,"sources":["assets/logo.svg","components/footer/footer.module.scss","components/user-page/user-page.module.scss","components/tasks/form/task-form.module.scss","components/tasks/list/task-list.module.scss","components/tasks/item/task-item.module.scss","components/tasks/folders/folders.module.scss","components/header/header.jsx","components/footer/footer.jsx","components/user-page/user-page.jsx","reducers/blog.js","components/blog-page/index.jsx","connectors/blog.js","actions/tasks.js","components/tasks/form/task-form.jsx","components/tasks/item/task-item.jsx","components/tasks/list/task-list.jsx","components/tasks/folders/folders.jsx","components/tasks/index.jsx","selectors/taskFolders.js","selectors/tasks.js","actions/taskFolders.js","connectors/tasks.js","components/auth-form/auth-form.jsx","components/reg-form/reg-form.jsx","components/app.jsx","selectors/user.js","actions/user.js","selectors/app.js","connectors/app.js","serviceWorker.js","actions/app.js","reducers/app.js","reducers/tasks.js","reducers/user.js","constants.js","reducers/taskFolders.js","reducers/index.js","middlewares/tasks.js","middlewares/taskFolders.js","middlewares/user.js","socket.js","middlewares/app.js","redux/store.js","index.js","components/blog-page/blog-page.module.scss","components/header/header.module.scss","components/tasks/tasks.module.scss"],"names":["module","exports","Header","isAuth","logout","isConnected","className","s","container","logo","connected","to","exact","src","alt","link","activeClassName","active","onClick","Footer","UserPage","initialState","posts","inputText","blogReducer","state","action","type","payload","id","Date","getTime","text","lastModified","newPosts","filter","post","BlogPage","addPost","removePost","changePostText","wrap","map","index","key","item","remove","e","onSubmit","preventDefault","onChange","target","value","connect","blogPage","dispatch","postId","changeNewPostTextCreator","createActions","INIT","LOAD_LIST","REQUEST_LIST","SUCCESS_LIST","tasks","FAILURE_LIST","error","REQUEST_ITEM","SUCCESS_ITEM","FAILURE_ITEM","ADD_TASK","EDIT_TASK_TITLE","task","DELETE_TASK","SUCCESS_PATCH_TASK","FAILURE_PATCH_TASK","DONE_TASK","UN_DONE_TASK","CHANGE_NEW_TASK_TEXT","prefix","init","loadList","requestList","successList","failureList","requestItem","successItem","failureItem","addTask","editTaskTitle","deleteTask","successPatchTask","failurePatchTask","doneTask","unDoneTask","changeNewTaskText","TaskForm","newTaskText","addNewTask","placeholder","TaskItem","checked","useState","doEdit","setDoEdit","title","setTitle","useEffect","console","log","window","addEventListener","done","content","name","autoFocus","onBlur","onDoubleClick","control","href","TaskList","items","list","Array","isArray","_id","completed","Folders","changeFolder","activeFolder","folders","newFolderText","changeNewFolderText","addNewFolder","deleteFolder","editable","form","TasksPage","aside","selectTaskFolders","taskFolders","getActiveFolder","createSelector","propOr","getFolders","getNewFolderText","selectTasks","getTasks","tasksFilters","sort","a","b","createdAt","getNewTaskText","default","folderId","deleted","showAll","showDeleted","CHANGE_FOLDER","CHANGE_NEW_FOLDER_TEXT","ADD_FOLDER","DELETE_FOLDER","REQUEST_DELETE_FOLDER","SUCCESS_DELETE_FOLDER","FAILURE_DELETE_FOLDER","addFolder","requestDeleteFolder","successDeleteFolder","failureDeleteFolder","store","bindActionCreators","AuthForm","login","setLogin","password","setPassword","RegForm","password2","setPassword2","App","onSubmitAuthForm","authError","onSubmitRegForm","regError","path","selectUser","user","getUser","getToken","getIsAuth","token","getAuthError","prop","getRegError","AUTH","settings","REQUEST_AUTH","SUCCESS_AUTH","FAILURE_AUTH","REG","REQUEST_REG","SUCCESS_REG","FAILURE_REG","LOGOUT","auth","requestAuth","successAuth","failureAuth","reg","requestReg","successReg","failureReg","getIsConnected","app","socketStatus","username","Boolean","location","hostname","match","SET_SOCKET_STATUS","status","setSocketStatus","handleActions","listStatus","itemStatus","DEFAULT_FOLDERS","API_URL","statusList","find","folder","statusItem","statusDeleting","reducer","combineReducers","appReducer","tasksReducer","userReducer","taskFoldersReducer","next","getState","instance","axios","create","baseURL","timeout","headers","toString","createTask","patchTask","get","response","data","patch","Error","message","createFolder","removeFolder","delete","authorization","registration","getSocket","userId","Socket","io","query","successCreateFolder","successCreateItem","loadTasks","loadFolders","socket","on","setFolders","setTasks","disconnect","emit","persistConfig","storage","whitelist","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initStore","preloadedState","undefined","createStore","persistReducer","applyMiddleware","appMiddleware","userMiddleware","tasksMiddleware","taskFoldersMiddleware","persistor","persistStore","ReactDOM","render","loading","onBeforeLift","initApp","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.fd9defb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d61c3928.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__9AJRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"user-page_container__3ret9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"task-form_container__EJ-B9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"task-list_list__Hovlx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"task-item_item__3meYf\",\"content\":\"task-item_content__h4Ns7\",\"title-input\":\"task-item_title-input__2wL5a\",\"input-container\":\"task-item_input-container__35c0r\",\"control\":\"task-item_control__28jYQ\",\"done\":\"task-item_done__348Qf\",\"name\":\"task-item_name__1tdzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"folders_container__3OK7N\",\"folders\":\"folders_folders__3zqaQ\",\"title\":\"folders_title__TDYop\",\"action\":\"folders_action__2NB_E\",\"active\":\"folders_active__2GDdm\",\"form\":\"folders_form__ucV3x\",\"form-text\":\"folders_form-text__1rvYy\",\"sync\":\"folders_sync__11fs7\"};","import React from 'react';\r\nimport s from './header.module.scss';\r\nimport logo from '../../assets/logo.svg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = ({ isAuth, logout, isConnected }) => (\r\n  <header className={s.container}>\r\n    <div className={s['left-part']}>\r\n      <NavLink\r\n        className={isConnected ? `${s.logo} ${s.connected}` : s.logo}\r\n        to='/'\r\n        exact\r\n      >\r\n        <img src={logo} className={s['logo-img']} alt=\"logo\"/>\r\n        <span className={s['logo-title']}>Tonodo</span>\r\n      </NavLink>\r\n    </div>\r\n    <div className={s['top-nav']}>\r\n      {isAuth && (\r\n        <>\r\n          <NavLink to='/' exact className={s.link} activeClassName={s.active}>Задачи</NavLink>\r\n          <NavLink to='/blog' className={s.link} activeClassName={s.active}>Блог</NavLink>\r\n          <NavLink to='/settings' className={s.link} activeClassName={s.active}>Настройки</NavLink>\r\n          <NavLink to='/profile' className={s.link} activeClassName={s.active}>Профиль</NavLink>\r\n          <NavLink\r\n            to='/logout'\r\n            className={s.link}\r\n            activeClassName={s.active}\r\n            onClick={logout}\r\n          >\r\n            Выход\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './footer.module.scss';\r\n\r\nconst Footer = () => (\r\n  <footer className={s.container}>\r\n    &copy; 2020\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport s from './user-page.module.scss';\r\n\r\nconst UserPage = () => (\r\n  <div className={s.container}>userpage</div>\r\n)\r\n\r\nexport default UserPage;\r\n","const ADD_POST = 'ADD_POST';\r\nconst CHANGE_NEW_POST_TEXT = 'CHANGE_NEW_POST_TEXT';\r\nconst REMOVE_POST = 'REMOVE_POST';\r\n\r\nconst initialState =  {\r\n  posts: [],\r\n  inputText: '',\r\n};\r\n\r\nconst blogReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_POST:\r\n      if(state.inputText) {\r\n        const posts = [\r\n          {\r\n            id: new Date().getTime(),\r\n            text: state.inputText,\r\n            lastModified: new Date().getTime(),\r\n          },\r\n          ...state.posts\r\n        ];\r\n        return {\r\n          ...state,\r\n          inputText: '',\r\n          posts: posts\r\n        }\r\n      }\r\n      return state;\r\n    case CHANGE_NEW_POST_TEXT:\r\n      return {...state, inputText: payload.text};\r\n    case REMOVE_POST:\r\n      const newPosts = state.posts.filter(post => post.id !== payload.id);\r\n      return {...state, posts: newPosts};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blogReducer;\r\n\r\n\r\nexport const addPostCreator = () => ({\r\n  type: ADD_POST,\r\n});\r\n\r\nexport const changeNewPostTextCreator = (text) => ({\r\n  type: CHANGE_NEW_POST_TEXT,\r\n  payload: { text },\r\n});\r\n\r\nexport const removePostCreator = (id) => ({\r\n  type: REMOVE_POST,\r\n  payload: { id },\r\n});\r\n\r\n","import React from 'react';\r\nimport s     from './blog-page.module.scss';\r\n\r\nconst BlogPage = ({\r\n  addPost,\r\n  removePost,\r\n  changePostText,\r\n  posts,\r\n  inputText,\r\n}) => (\r\n  <div className={s.wrap}>\r\n    <div className={s.container}>\r\n      {posts && posts.map((post, index) => (\r\n          <div\r\n            key={index}\r\n            className={s.item}\r\n          >\r\n            <p>{post.text}</p>\r\n            <span\r\n              className={s.remove}\r\n              onClick={e => removePost(post.id)}\r\n            >\r\n              x\r\n            </span>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n\r\n    <form\r\n      className={s['new-post']}\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        addPost();\r\n      }}\r\n    >\r\n      <textarea\r\n        onChange={(e) => changePostText(e.target.value)}\r\n        value={inputText}\r\n      />\r\n      <input type='submit' value='New Post' />\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default BlogPage;\r\n","import {\r\n  addPostCreator,\r\n  changeNewPostTextCreator,\r\n  removePostCreator\r\n} from '../reducers/blog';\r\nimport BlogPage from '../components/blog-page/';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  const {blogPage} = state;\r\n  return ({\r\n    posts: blogPage.posts,\r\n    inputText: blogPage.inputText,\r\n  })\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removePost: postId => dispatch(removePostCreator(postId)),\r\n  addPost: () => dispatch(addPostCreator()),\r\n  changePostText: text => dispatch(changeNewPostTextCreator(text)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogPage);\r\n","import {createActions} from 'redux-actions';\r\n\r\nexport const {\r\n  init,\r\n  loadList,\r\n  requestList,\r\n  successList,\r\n  failureList,\r\n  requestItem,\r\n  successItem,\r\n  failureItem,\r\n  addTask,\r\n  editTaskTitle,\r\n  deleteTask,\r\n  successPatchTask,\r\n  failurePatchTask,\r\n  doneTask,\r\n  unDoneTask,\r\n  changeNewTaskText,\r\n} = createActions({\r\n  INIT: () => ({}),\r\n  LOAD_LIST: () => ({}),\r\n  REQUEST_LIST: () => ({}),\r\n  SUCCESS_LIST: tasks => tasks,\r\n  FAILURE_LIST: error => ({error}),\r\n  REQUEST_ITEM: () => ({}),\r\n  SUCCESS_ITEM: item => ({item}),\r\n  FAILURE_ITEM: error => ({error}),\r\n  ADD_TASK: text => ({text}),\r\n  EDIT_TASK_TITLE: task => task,\r\n  DELETE_TASK: id => ({id}),\r\n  SUCCESS_PATCH_TASK: item => ({ item }),\r\n  FAILURE_PATCH_TASK: error => error,\r\n  DONE_TASK: id => ({id}),\r\n  UN_DONE_TASK: id => ({id}),\r\n  CHANGE_NEW_TASK_TEXT: text => ({text}),\r\n}, { prefix: 'tasks' });\r\n\r\n","import React from 'react';\r\nimport s  from './task-form.module.scss';\r\n\r\nconst TaskForm = ({\r\n  newTaskText,\r\n  addNewTask,\r\n  changeNewTaskText,\r\n}) => (\r\n  <form\r\n    onSubmit={addNewTask}\r\n    className={s.container}>\r\n    <input\r\n      type=\"text\"\r\n      placeholder='Новая запись'\r\n      onChange={changeNewTaskText}\r\n      value={newTaskText}\r\n    />\r\n    <button>ok</button>\r\n  </form>\r\n);\r\n\r\nexport default TaskForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport s from './task-item.module.scss';\r\n\r\nconst TaskItem = ({\r\n  id,\r\n  checked,\r\n  text,\r\n  editTaskTitle,\r\n  doneTask,\r\n  unDoneTask,\r\n  deleteTask,\r\n}) => {\r\n  const [doEdit, setDoEdit] = useState(false);\r\n  const [title, setTitle] = useState(text);\r\n\r\n  useEffect(() => {\r\n    setTitle(text);\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    console.log('effect')\r\n    window.addEventListener('onKeyDown', e => {\r\n      console.log(e.target)\r\n    });\r\n    return () => {\r\n      console.log('unmount effect')\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`${s.item} ${checked ? s.done : ''}`}>\r\n      <div className={s.content}>\r\n        <span className={s['input-container']}>\r\n          <input\r\n            name={`task-${id}`}\r\n            type='checkbox'\r\n            onChange={e => checked ? unDoneTask(id) : doneTask(id)}\r\n            checked={checked}\r\n          />\r\n        </span>\r\n        {doEdit\r\n        ? (\r\n          <input\r\n            className={s['title-input']}\r\n            type='text'\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n            autoFocus={true}\r\n            onBlur={e => {\r\n              setDoEdit(false);\r\n              editTaskTitle({\r\n                title: e.target.value,\r\n                id\r\n              });\r\n            }}\r\n          />\r\n          )\r\n        : (\r\n          <span\r\n            className={s.title}\r\n            onDoubleClick={(e) => setDoEdit(true)}\r\n          >\r\n            {title}\r\n          </span>\r\n          )\r\n        }\r\n      </div>\r\n      <div className={s.control}>\r\n        <a\r\n          href={`/remove-task/${id}`}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            deleteTask(id);\r\n          }}\r\n        >\r\n          x\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport s from './task-list.module.scss';\r\nimport TaskItem from '../item/task-item';\r\n\r\nconst TaskList = ({\r\n  items,\r\n  editTaskTitle,\r\n  doneTask,\r\n  unDoneTask,\r\n  deleteTask,\r\n}) => {\r\n  return (\r\n    <div className={s.list}>\r\n      {Array.isArray(items) && items.map(({ _id: id, completed, title }, index) => (\r\n        <TaskItem\r\n          key={index}\r\n          id={id}\r\n          checked={completed}\r\n          text={title}\r\n          editTaskTitle={editTaskTitle}\r\n          doneTask={doneTask}\r\n          unDoneTask={unDoneTask}\r\n          deleteTask={deleteTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport s from './folders.module.scss';\r\n\r\nconst Folders = ({\r\n  changeFolder,\r\n  activeFolder,\r\n  folders,\r\n  newFolderText,\r\n  changeNewFolderText,\r\n  addNewFolder,\r\n  deleteFolder,\r\n}) => (\r\n  <div className={s.container}>\r\n    <ul className={s.folders}>\r\n      {folders && folders.map(({ _id, title, editable }, index) => (\r\n        <li\r\n          key={index}\r\n          className={activeFolder._id === _id ? s.active : ''}\r\n        >\r\n          <span\r\n            className={s.title}\r\n            onClick={() => changeFolder(_id)}\r\n          >\r\n            {title}\r\n          </span>\r\n          {editable && (<span\r\n            className={s.action}\r\n            onClick={() => deleteFolder(_id)}\r\n          >\r\n            x\r\n          </span>)}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        addNewFolder();\r\n      }}\r\n      className={s.form}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder='Новая папка'\r\n        value={newFolderText}\r\n        onChange={e => changeNewFolderText(e.target.value)}\r\n        className={s['form-text']}\r\n      />\r\n      <button>ok</button>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default Folders;\r\n","import React from 'react';\r\nimport s from './tasks.module.scss';\r\nimport TaskForm from './form/task-form';\r\nimport TaskList from './list/task-list';\r\nimport Folders from './folders/folders';\r\n\r\nconst TasksPage = ({\r\n  newTaskText,\r\n  items,\r\n  folders,\r\n  activeFolder,\r\n  addNewTask,\r\n  changeNewTaskText,\r\n  editTaskTitle,\r\n  doneTask,\r\n  unDoneTask,\r\n  deleteTask,\r\n  changeFolder,\r\n  newFolderText,\r\n  changeNewFolderText,\r\n  addNewFolder,\r\n  deleteFolder,\r\n}) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <main className={s.content}>\r\n        <TaskForm\r\n          addNewTask={addNewTask}\r\n          changeNewTaskText={changeNewTaskText}\r\n          newTaskText={newTaskText}\r\n        />\r\n        <TaskList\r\n          items={items}\r\n          activeFolder={activeFolder}\r\n          editTaskTitle={editTaskTitle}\r\n          doneTask={doneTask}\r\n          unDoneTask={unDoneTask}\r\n          deleteTask={deleteTask}\r\n        />\r\n      </main>\r\n\r\n      <div className={s.aside}>\r\n        <Folders\r\n          activeFolder={activeFolder}\r\n          folders={folders}\r\n          changeFolder={changeFolder}\r\n          newFolderText={newFolderText}\r\n          changeNewFolderText={changeNewFolderText}\r\n          addNewFolder={addNewFolder}\r\n          deleteFolder={deleteFolder}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default TasksPage;\r\n","import { createSelector } from 'reselect'\r\nimport propOr from 'lodash/fp/propOr';\r\n\r\nconst selectTaskFolders = state => state.taskFolders || {};\r\n\r\nexport const getActiveFolder = createSelector (\r\n  selectTaskFolders,\r\n  propOr({}, 'activeFolder')\r\n);\r\n\r\nexport const getFolders = createSelector (\r\n  [selectTaskFolders],\r\n  propOr([], 'items')\r\n);\r\n\r\nexport const getNewFolderText = createSelector (\r\n  selectTaskFolders,\r\n  propOr ('', 'newFolderText')\r\n);\r\n","import { createSelector } from 'reselect'\r\nimport propOr from 'lodash/fp/propOr';\r\nimport { getActiveFolder } from \"./taskFolders\";\r\n\r\nconst selectTasks = state => state.tasks || {};\r\n\r\nexport const getTasks = createSelector(\r\n  [selectTasks, getActiveFolder],\r\n  ({ items = [] }, activeFolder) => {\r\n    const filter = activeFolder.filter || 'default';\r\n    const filtered = tasksFilters[filter](items, activeFolder);\r\n    return filtered.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n  }\r\n);\r\n\r\nexport const getNewTaskText = createSelector(\r\n  selectTasks,\r\n  propOr('', 'newTaskText')\r\n);\r\n\r\n\r\nconst tasksFilters = {\r\n  default: (items, activeFolder) => items.filter(item => item.folderId === activeFolder._id && !item.deleted),\r\n  showAll: (items) => items.filter(item => !item.deleted),\r\n  showDeleted: (items) => items.filter(item => item.deleted),\r\n};","import {createActions} from 'redux-actions';\r\n\r\nexport const {\r\n  init,\r\n  loadList,\r\n  requestList,\r\n  successList,\r\n  failureList,\r\n  changeFolder,\r\n  changeNewFolderText,\r\n  addFolder,\r\n  requestItem,\r\n  successItem,\r\n  failureItem,\r\n  deleteFolder,\r\n  requestDeleteFolder,\r\n  successDeleteFolder,\r\n  failureDeleteFolder,\r\n} = createActions({\r\n  INIT: () => ({}),\r\n  LOAD_LIST: () => ({}),\r\n  REQUEST_LIST: () => ({}),\r\n  SUCCESS_LIST: items => items,\r\n  FAILURE_LIST: error => ({error}),\r\n  CHANGE_FOLDER: id => ({id}),\r\n  CHANGE_NEW_FOLDER_TEXT: text => ({text}),\r\n  ADD_FOLDER: () => ({}),\r\n  REQUEST_ITEM: () => ({}),\r\n  SUCCESS_ITEM: item => ({item}),\r\n  FAILURE_ITEM: error => ({error}),\r\n  DELETE_FOLDER: id => ({id}),\r\n  REQUEST_DELETE_FOLDER: () => ({}),\r\n  SUCCESS_DELETE_FOLDER: item => ({item}),\r\n  FAILURE_DELETE_FOLDER: error => ({error}),\r\n}, { prefix: 'task-folders' });\r\n\r\n","import {\r\n  addTask,\r\n  deleteTask,\r\n  doneTask,\r\n  unDoneTask,\r\n  changeNewTaskText, editTaskTitle,\r\n} from '../actions/tasks';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport TasksPage from '../components/tasks/';\r\nimport { getNewTaskText, getTasks } from \"../selectors/tasks\";\r\nimport { getActiveFolder, getFolders, getNewFolderText } from \"../selectors/taskFolders\";\r\nimport { addFolder, changeFolder, changeNewFolderText, deleteFolder } from \"../actions/taskFolders\";\r\n\r\nconst mapStateToProps = (store) => ({\r\n  newTaskText: getNewTaskText(store),\r\n  items: getTasks(store),\r\n  activeFolder: getActiveFolder(store),\r\n  folders: getFolders(store),\r\n  newFolderText: getNewFolderText(store),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n  addNewTask: e => {\r\n    e.preventDefault();\r\n    return addTask();\r\n  },\r\n  changeNewTaskText: e => {\r\n    e.preventDefault();\r\n    return changeNewTaskText(e.target.value);\r\n  },\r\n  editTaskTitle: task => editTaskTitle(task),\r\n  doneTask: id => doneTask(id),\r\n  unDoneTask: id => unDoneTask(id),\r\n  deleteTask: id => deleteTask(id),\r\n\r\n  changeFolder: folderId => changeFolder(folderId),\r\n  changeNewFolderText: text => changeNewFolderText(text),\r\n  addNewFolder: () => addFolder(),\r\n  deleteFolder: id => deleteFolder(id),\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksPage);\r\n","import React, { useState } from 'react';\n\nfunction AuthForm ({ onSubmit, error }) {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSubmit(login, password)\n      }}\n    >\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          name='username'\n          placeholder='username'\n          value={login}\n          onChange={e=>setLogin(e.target.value)}\n        />\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"password\"\n          name='password'\n          placeholder='password'\n          value={password}\n          onChange={e=>setPassword(e.target.value)}\n        />\n      </div>\n      {error && (\n        <div className=\"form-error\">{error}</div>\n      )}\n      <div className=\"input-container\"><input type=\"submit\"/></div>\n    </form>\n  );\n}\n\nexport default AuthForm;\n","import React, { useState } from 'react';\n\nfunction RegForm ({ onSubmit, error }) {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSubmit(login, password, password2);\n      }}\n    >\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          name='username'\n          placeholder='username'\n          value={login}\n          onChange={e=>setLogin(e.target.value)}\n        />\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"password\"\n          name='password'\n          placeholder='password'\n          value={password}\n          onChange={e=>setPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"password\"\n          name='password2'\n          placeholder='repeat password'\n          value={password2}\n          onChange={e=>setPassword2(e.target.value)}\n        />\n      </div>\n      {error && (\n        <div className=\"form-error\">{error}</div>\n      )}\n      <div className=\"input-container\"><input type=\"submit\"/></div>\n    </form>\n  );\n}\n\nexport default RegForm;\n","import React from 'react';\nimport './app.scss';\nimport Header from './header/header';\nimport Footer from './footer/footer';\nimport UserPage from './user-page/user-page';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Blog from '../connectors/blog';\nimport Tasks from '../connectors/tasks';\nimport AuthForm from \"./auth-form/auth-form\";\nimport RegForm from \"./reg-form/reg-form\";\n\nfunction App ({\n  isAuth,\n  onSubmitAuthForm,\n  logout,\n  authError,\n  isConnected,\n  onSubmitRegForm,\n  regError,\n}) {\n  return (\n    <BrowserRouter>\n      <div className='wrapper'>\n        <Header\n          isAuth={isAuth}\n          logout={logout}\n          isConnected={isConnected}\n        />\n        <div className='middle'>\n          {isAuth\n            ? (\n              <Switch>\n                <Route path='/settings'>\n                  <h1>Настройки</h1>\n                </Route>\n                <Route path='/profile'>\n                  <UserPage/>\n                </Route>\n                <Route path='/blog'>\n                  <Blog/>\n                </Route>\n                <Route path='/'>\n                  <Tasks/>\n                </Route>\n              </Switch>\n            )\n            : (\n              <Switch>\n                <Route path='/'>\n                  <h2>Вход</h2>\n                  <AuthForm onSubmit={onSubmitAuthForm} error={authError} />\n                  <br />\n                  <br />\n                  <h2>Регистрация</h2>\n                  <RegForm onSubmit={onSubmitRegForm} error={regError} />\n                </Route>\n              </Switch>\n            )\n          }\n        </div>\n        <Footer/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createSelector } from 'reselect'\r\nimport propOr from 'lodash/fp/propOr';\r\nimport prop from 'lodash/fp/prop';\r\n\r\nconst selectUser = state => state.user || {};\r\n\r\nexport const getUser = createSelector(\r\n  selectUser,\r\n  user => user || {},\r\n);\r\n\r\nexport const getToken = createSelector(\r\n  selectUser,\r\n  propOr('', 'token')\r\n);\r\n\r\nexport const getIsAuth = createSelector(\r\n  selectUser,\r\n  user => user.token && user._id\r\n);\r\n\r\nexport const getAuthError = createSelector(\r\n  selectUser,\r\n  prop('authError')\r\n);\r\nexport const getRegError = createSelector(\r\n  selectUser,\r\n  prop('regError')\r\n);","import {createActions} from 'redux-actions';\r\n\r\nexport const {\r\n  auth,\r\n  requestAuth,\r\n  successAuth,\r\n  failureAuth,\r\n  reg,\r\n  requestReg,\r\n  successReg,\r\n  failureReg,\r\n  logout,\r\n} = createActions({\r\n  AUTH: settings => settings,\r\n  REQUEST_AUTH: () => ({}),\r\n  SUCCESS_AUTH: user => user,\r\n  FAILURE_AUTH: error => error,\r\n  REG: settings => settings,\r\n  REQUEST_REG: () => ({}),\r\n  SUCCESS_REG: user => user,\r\n  FAILURE_REG: error => error,\r\n  LOGOUT: () => ({}),\r\n}, { prefix: 'user' });\r\n\r\n","import { createSelector } from 'reselect'\r\n\r\nconst selectApp = state => state.app || {};\r\n\r\nexport const getIsConnected = createSelector(\r\n  selectApp,\r\n  ({ socketStatus }) => socketStatus === 'connected',\r\n);","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport App from \"../components/app\";\r\nimport { getAuthError, getIsAuth, getRegError } from \"../selectors/user\";\r\nimport { auth, logout, reg } from \"../actions/user\";\r\nimport { getIsConnected } from \"../selectors/app\";\r\n\r\nconst mapStateToProps = (store) => ({\r\n  isAuth: getIsAuth(store),\r\n  authError: getAuthError(store),\r\n  regError: getRegError(store),\r\n  isConnected: getIsConnected(store),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n  onSubmitAuthForm: (username, password) => auth({ username, password }),\r\n  onSubmitRegForm: (username, password, password2) => reg({ username, password, password2 }),\r\n  logout: e => {\r\n    e.preventDefault();\r\n    return logout();\r\n  },\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createActions} from 'redux-actions';\r\n\r\nexport const {\r\n  init,\r\n  setSocketStatus,\r\n} = createActions({\r\n  INIT: settings => settings,\r\n  SET_SOCKET_STATUS: status => status,\r\n}, { prefix: 'app' });\r\n\r\n","import {handleActions} from 'redux-actions';\r\n\r\nimport {\r\n  init,\r\n  setSocketStatus,\r\n} from '../actions/app';\r\n\r\n\r\nconst initialState = {\r\n  socketStatus: 'disconnected',\r\n};\r\n\r\nexport default handleActions({\r\n  [init]: (store, action) => {\r\n    return {\r\n      ...store,\r\n    }\r\n  },\r\n  [setSocketStatus]: (store, { payload }) => {\r\n    return {\r\n      ...store,\r\n      socketStatus: payload,\r\n    }\r\n  },\r\n}, initialState);\r\n","import {handleActions} from 'redux-actions';\r\nimport {\r\n  init,\r\n  requestList,\r\n  successList,\r\n  failureList,\r\n  requestItem,\r\n  successItem,\r\n  failureItem,\r\n  successPatchTask,\r\n  failurePatchTask,\r\n  changeNewTaskText,\r\n} from '../actions/tasks';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  newTaskText: '',\r\n};\r\n\r\nexport default handleActions({\r\n  [init]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      listStatus: 'initial',\r\n    }\r\n  },\r\n  [requestList]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      listStatus: 'request',\r\n    };\r\n  },\r\n  [failureList]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      listStatus: 'failure',\r\n      error: action.payload,\r\n    };\r\n  },\r\n  [successList]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      items: [...initialState.items, ...action.payload],\r\n      listStatus: 'success',\r\n    }\r\n  },\r\n  [requestItem]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      itemStatus: 'request',\r\n    };\r\n  },\r\n  [failureItem]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      itemStatus: 'failure',\r\n      error: action.payload,\r\n    };\r\n  },\r\n  [successItem]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      items: [...store.items, action.payload],\r\n      itemStatus: 'success',\r\n    }\r\n  },\r\n  [successPatchTask]: (store, { payload }) => {\r\n    return {\r\n      ...store,\r\n      items: store.items.map(item => item._id === payload._id ? payload : item)\r\n    }\r\n  },\r\n  [failurePatchTask]: (store, { payload }) => {\r\n    return {\r\n      ...store,\r\n      error: payload,\r\n    }\r\n  },\r\n  [changeNewTaskText]: (store, { payload }) => ({\r\n    ...store,\r\n    newTaskText: payload.text,\r\n  }),\r\n}, initialState);\r\n","import {handleActions} from 'redux-actions';\r\n\r\nimport {\r\n  failureAuth,\r\n  requestAuth,\r\n  successAuth,\r\n  failureReg,\r\n  requestReg,\r\n  successReg,\r\n  logout,\r\n} from '../actions/user';\r\n\r\n\r\nconst initialState = {\r\n  token: '',\r\n};\r\n\r\nexport default handleActions({\r\n  [requestAuth]: (store, action) => {\r\n    return {\r\n      ...store,\r\n    }\r\n  },\r\n  [successAuth]: (store, { payload: user }) => {\r\n    return {\r\n      ...store,\r\n      ...user,\r\n    }\r\n  },\r\n  [failureAuth]: (store, { payload }) => {\r\n    return {\r\n      ...store,\r\n      authError: payload,\r\n    }\r\n  },\r\n  [requestReg]: (store, action) => {\r\n    return {\r\n      ...store,\r\n    }\r\n  },\r\n  [successReg]: (store, { payload: user }) => {\r\n    return {\r\n      ...store,\r\n      ...user,\r\n    }\r\n  },\r\n  [failureReg]: (store, { payload }) => {\r\n    return {\r\n      ...store,\r\n      regError: payload,\r\n    }\r\n  },\r\n  [logout]: (store, action) => {\r\n    return {}\r\n  },\r\n}, initialState);\r\n","export const DEFAULT_FOLDERS = [\r\n  {_id: '1', title: 'Все', editable: false, filter: 'showAll'},\r\n  {_id: '2', title: 'Корзина', editable: false,  filter: 'showDeleted'}\r\n];\r\n\r\n// export const API_URL = 'http://localhost:5000/';\r\nexport const API_URL = 'http://134.0.119.35:5000/';","import {handleActions} from 'redux-actions';\r\nimport {\r\n  addFolder,\r\n  changeFolder,\r\n  changeNewFolderText,\r\n  failureDeleteFolder,\r\n  failureItem,\r\n  failureList,\r\n  init,\r\n  requestDeleteFolder,\r\n  requestItem,\r\n  requestList,\r\n  successDeleteFolder,\r\n  successItem,\r\n  successList\r\n} from \"../actions/taskFolders\";\r\nimport { DEFAULT_FOLDERS } from \"../constants\";\r\n\r\n\r\nconst initialState = {\r\n  items: DEFAULT_FOLDERS,\r\n  newFolderText: '',\r\n  activeFolder: DEFAULT_FOLDERS[0],\r\n};\r\n\r\nexport default handleActions({\r\n  [init]: (store, action) => {\r\n    return {\r\n      ...store,\r\n    }\r\n  },\r\n  [requestList]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      statusList: 'request',\r\n    };\r\n  },\r\n  [failureList]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      statusList: 'failure',\r\n      error: action.payload,\r\n    };\r\n  },\r\n  [successList]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      items: [...DEFAULT_FOLDERS, ...action.payload],\r\n      statusList: 'success',\r\n    }\r\n  },\r\n  [changeFolder]:  (store, { payload }) => {\r\n    return ({\r\n      ...store,\r\n      activeFolder: store.items.find(folder => folder._id === payload.id),\r\n    })\r\n  },\r\n  [changeNewFolderText]:  (store, { payload }) => ({\r\n    ...store,\r\n    newFolderText: payload.text,\r\n  }),\r\n  [addFolder]: (store, { payload }) => {\r\n    return {\r\n      ...store,\r\n    }\r\n  },\r\n  [requestItem]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      statusItem: 'request',\r\n    };\r\n  },\r\n  [failureItem]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      statusItem: 'failure',\r\n      error: action.payload,\r\n    };\r\n  },\r\n  [successItem]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      items: [...store.items, action.payload],\r\n      statusItem: 'success',\r\n    }\r\n  },\r\n  [requestDeleteFolder]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      statusDeleting: 'request',\r\n    };\r\n  },\r\n  [failureDeleteFolder]: (store, action) => {\r\n    return {\r\n      ...store,\r\n      statusDeleting: 'failure',\r\n      error: action.payload,\r\n    };\r\n  },\r\n  [successDeleteFolder]: (store, { payload }) => {\r\n    return {\r\n      ...store,\r\n      items: store.items.filter(item => item._id !== payload),\r\n      statusDeleting: 'success',\r\n    }\r\n  },\r\n}, initialState);\r\n","import appReducer from './app';\r\nimport blogReducer from './blog';\r\nimport tasksReducer from './tasks';\r\nimport userReducer from './user';\r\nimport taskFoldersReducer from './taskFolders';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst reducer = combineReducers({\r\n  app: appReducer,\r\n  blogPage: blogReducer,\r\n  tasks: tasksReducer,\r\n  user: userReducer,\r\n  taskFolders: taskFoldersReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\nimport {\r\n  requestList,\r\n  successList,\r\n  failureList,\r\n  requestItem,\r\n  successItem,\r\n  failureItem,\r\n  addTask,\r\n  changeNewTaskText,\r\n  doneTask,\r\n  unDoneTask,\r\n  deleteTask,\r\n  successPatchTask, failurePatchTask, loadList, editTaskTitle,\r\n} from '../actions/tasks';\r\nimport { getNewTaskText } from \"../selectors/tasks\";\r\nimport { getToken } from \"../selectors/user\";\r\nimport { getActiveFolder } from \"../selectors/taskFolders\";\r\nimport { API_URL } from \"../constants\";\r\n\r\nexport default store => next => async action => {\r\n  next(action);\r\n  const state = store.getState();\r\n  const token = getToken(state);\r\n\r\n  const instance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 1000,\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n\r\n  switch (action.type) {\r\n    case loadList.toString():\r\n      store.dispatch(requestList());\r\n      store.dispatch(await getTasks(state, action, instance));\r\n      break;\r\n    case addTask.toString():\r\n      store.dispatch(requestItem());\r\n      store.dispatch(await createTask(state, action, instance));\r\n      store.dispatch(changeNewTaskText(''));\r\n      break;\r\n    case doneTask.toString():\r\n      store.dispatch(await patchTask({ completed: true }, state, action, instance));\r\n      break;\r\n    case editTaskTitle.toString():\r\n      const { title } = action.payload;\r\n      store.dispatch(await patchTask({ title }, state, action, instance));\r\n      break;\r\n    case unDoneTask.toString():\r\n      store.dispatch(await patchTask({ completed: false }, state, action, instance));\r\n      break;\r\n    case deleteTask.toString():\r\n      store.dispatch(await patchTask({ deleted: true }, state, action, instance));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport const getTasks = async (store, action, axios) => {\r\n  try {\r\n    const response = await axios.get('/tasks');\r\n    return {\r\n      type: successList.toString(),\r\n      payload: response.data\r\n    };\r\n  } catch (e) {\r\n    return failureList();\r\n  }\r\n};\r\n\r\nexport const createTask = async (state, action, axios) => {\r\n  const title = getNewTaskText(state);\r\n  const { _id: folderId } = getActiveFolder(state);\r\n  try {\r\n    const response = await axios.post('/tasks', {\r\n      title,\r\n      folderId,\r\n    });\r\n    return {\r\n      type: successItem.toString(),\r\n      payload: response.data\r\n    };\r\n  } catch (e) {\r\n    return failureItem();\r\n  }\r\n};\r\n\r\nexport const patchTask = async (data, state, action, axios) => {\r\n  const { id } = action.payload;\r\n  const activeFolder = getActiveFolder(state);\r\n  console.log(activeFolder);\r\n  try {\r\n    const { data: response } = await axios.patch(`/tasks/${id}`, data);\r\n    if (response.error) {\r\n      throw new Error(response.error);\r\n    }\r\n    return {\r\n      type: successPatchTask.toString(),\r\n      payload: response,\r\n    };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return failurePatchTask(error.message);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  requestList,\r\n  successList,\r\n  failureList,\r\n  requestItem,\r\n  successItem,\r\n  failureItem,\r\n  addFolder,\r\n  changeNewFolderText,\r\n  deleteFolder,\r\n  successDeleteFolder,\r\n  failureDeleteFolder,\r\n  requestDeleteFolder,\r\n  changeFolder,\r\n  loadList,\r\n} from '../actions/taskFolders';\r\nimport { getToken } from \"../selectors/user\";\r\nimport { getActiveFolder, getNewFolderText } from \"../selectors/taskFolders\";\r\nimport { API_URL } from \"../constants\";\r\n\r\nexport default store => next => async action => {\r\n  next(action);\r\n  const state = store.getState();\r\n  const token = getToken(state);\r\n\r\n  const instance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 1000,\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n\r\n  switch (action.type) {\r\n    case loadList.toString():\r\n      store.dispatch(requestList());\r\n      store.dispatch(await getFolders(state, action, instance));\r\n      break;\r\n    case addFolder.toString():\r\n      store.dispatch(requestItem());\r\n      store.dispatch(await createFolder(state, action, instance));\r\n      store.dispatch(changeNewFolderText(''));\r\n      break;\r\n    case deleteFolder.toString():\r\n      const activeFolder = getActiveFolder(state);\r\n      store.dispatch(requestDeleteFolder());\r\n      store.dispatch(await removeFolder(state, action, instance));\r\n      if(action.payload.id === activeFolder._id) {\r\n        store.dispatch(changeFolder('1'));\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport const getFolders = async (store, action, axios) => {\r\n  try {\r\n    const response = await axios.get('/taskFolders');\r\n    return {\r\n      type: successList.toString(),\r\n      payload: response.data\r\n    };\r\n  } catch (e) {\r\n    return failureList();\r\n  }\r\n};\r\n\r\nexport const createFolder = async (state, action, axios) => {\r\n  const title = getNewFolderText(state);\r\n  try {\r\n    const response = await axios.post('/taskFolders', {\r\n      title,\r\n    });\r\n    return {\r\n      type: successItem.toString(),\r\n      payload: response.data\r\n    };\r\n  } catch (e) {\r\n    return failureItem();\r\n  }\r\n};\r\n\r\nexport const removeFolder = async (state, action, axios) => {\r\n  const { id } = action.payload;\r\n  try {\r\n    const { data: response } = await axios.delete(`/taskFolders/${id}`);\r\n    if (response.error) {\r\n      throw new Error(response.error);\r\n    }\r\n    return {\r\n      type: successDeleteFolder.toString(),\r\n      payload: id,\r\n    };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return failureDeleteFolder(error.message);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  auth,\r\n  requestAuth,\r\n  successAuth,\r\n  failureAuth, successReg, failureReg, reg, requestReg,\r\n} from '../actions/user';\r\nimport { API_URL } from \"../constants\";\r\n\r\nexport default store => next => async action => {\r\n  next(action);\r\n  const state = store.getState();\r\n\r\n  const instance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 3000,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n\r\n  switch(action.type) {\r\n    case auth.toString():\r\n      store.dispatch(requestAuth());\r\n      store.dispatch(await authorization(state, action, instance));\r\n      break;\r\n    case reg.toString():\r\n      store.dispatch(requestReg());\r\n      store.dispatch(await registration(state, action, instance));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport const authorization = async (state, action, axios) => {\r\n  const { username, password } = action.payload;\r\n  try {\r\n    const response = await axios.post('/auth', {\r\n      username,\r\n      password,\r\n    });\r\n    return {\r\n      type: successAuth.toString(),\r\n      payload: response.data\r\n    };\r\n  } catch (error) {\r\n    const { data } = error.response || {};\r\n    return failureAuth((data && data.message) || 'Connect error. Try later');\r\n  }\r\n};\r\n\r\nexport const registration = async (state, action, axios) => {\r\n  const { username, password, password2 } = action.payload;\r\n  try {\r\n    const response = await axios.post('/reg', {\r\n      username,\r\n      password,\r\n      password2,\r\n    });\r\n    return {\r\n      type: successReg.toString(),\r\n      payload: response.data\r\n    };\r\n  } catch (error) {\r\n    const { data } = error.response || {};\r\n    return failureReg((data && data.message) || 'Connect error. Try later');\r\n  }\r\n};\r\n","import io from 'socket.io-client';\r\nimport { API_URL } from \"./constants\";\r\n\r\nexport const getSocket = userId => Socket(userId);\r\nexport const removeSocket = () => {\r\n  Socket.instance = null;\r\n};\r\n\r\nfunction Socket (userId) {\r\n  if (!Socket.instance) {\r\n    Socket.instance = io(API_URL, {\r\n      query: {\r\n        userId\r\n      }\r\n    });\r\n  }\r\n  return Socket.instance;\r\n}","import {\r\n  init, setSocketStatus,\r\n} from '../actions/app';\r\nimport { logout, successAuth, successReg } from '../actions/user';\r\nimport {\r\n  changeFolder,\r\n  loadList as loadFolders,\r\n  successDeleteFolder,\r\n  successItem as successCreateFolder,\r\n  successList as setFolders\r\n} from \"../actions/taskFolders\";\r\nimport {\r\n  loadList as loadTasks,\r\n  successList as setTasks,\r\n  successItem as successCreateItem,\r\n  successPatchTask,\r\n} from \"../actions/tasks\";\r\nimport { getSocket, removeSocket } from \"../socket\";\r\nimport { getUser } from \"../selectors/user\";\r\n\r\nexport default store => next => async action => {\r\n  next(action);\r\n  const state = store.getState();\r\n\r\n  switch(action.type) {\r\n    case init.toString():\r\n      const user = getUser(state);\r\n      if (user._id) {\r\n        await store.dispatch(successAuth(user));\r\n      }\r\n      break;\r\n    case successReg.toString():\r\n    case successAuth.toString():\r\n      store.dispatch(loadTasks());\r\n      store.dispatch(loadFolders());\r\n\r\n      const socket = getSocket(action.payload._id);\r\n      socket.on('connect', (message) => {\r\n        store.dispatch(setSocketStatus('connected'));\r\n      });\r\n      socket.on('disconnect', () => {\r\n        store.dispatch(setSocketStatus('disconnected'));\r\n      });\r\n      socket.on('message', (message) => {\r\n        console.log('message: ', message);\r\n      });\r\n      socket.on('syncFolders', () => {\r\n        console.log('syncFolders');\r\n        store.dispatch(loadFolders());\r\n      });\r\n      socket.on('syncTasks', () => {\r\n        console.log('syncTasks');\r\n        store.dispatch(loadTasks());\r\n      });\r\n      break;\r\n    case logout.toString():\r\n      store.dispatch(setFolders([]));\r\n      store.dispatch(changeFolder('1'));\r\n      store.dispatch(setTasks([]));\r\n      {\r\n        const socket = getSocket();\r\n        socket.disconnect();\r\n        removeSocket();\r\n      }\r\n      break;\r\n    case successCreateFolder.toString():\r\n    case successDeleteFolder.toString():\r\n      {\r\n        const socket = getSocket();\r\n        socket.emit('syncFolders');\r\n      }\r\n      break;\r\n    case successCreateItem.toString():\r\n    case successPatchTask.toString():\r\n      {\r\n        const socket = getSocket();\r\n        socket.emit('syncTasks');\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport reducer from '../reducers';\r\nimport tasksMiddleware from \"../middlewares/tasks\";\r\nimport taskFoldersMiddleware from \"../middlewares/taskFolders\";\r\nimport userMiddleware from \"../middlewares/user\";\r\nimport appMiddleware from \"../middlewares/app\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'tonodo',\r\n  storage,\r\n  whitelist: ['user'],\r\n};\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const initStore = (preloadedState = undefined) => {\r\n  const store = createStore(\r\n    persistReducer(persistConfig, reducer),\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(\r\n      // ReduxThunk,\r\n      appMiddleware,\r\n      userMiddleware,\r\n      tasksMiddleware,\r\n      taskFoldersMiddleware,\r\n      // blogsMiddleware\r\n    ))\r\n  );\r\n\r\n  const persistor = persistStore(store);\r\n\r\n  return { store, persistor }\r\n};\r\n\r\nexport default initStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './connectors/app';\nimport * as serviceWorker from './serviceWorker';\nimport { initStore } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { init as initApp } from './actions/app';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { store, persistor } = initStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate\n      loading={ null }\n      persistor={ persistor }\n      onBeforeLift={() => store.dispatch(initApp())}\n    >\n      <App/>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"blog-page_wrap__2Nofb\",\"item\":\"blog-page_item__R0SMp\",\"remove\":\"blog-page_remove__2KlUR\",\"new-post\":\"blog-page_new-post__RKgFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__v0Obr\",\"logo\":\"header_logo__1D7nN\",\"connected\":\"header_connected__1Hc7S\",\"logo-title\":\"header_logo-title__3mYEI\",\"logo-img\":\"header_logo-img__A_fEH\",\"top-nav\":\"header_top-nav__Sy2Ba\",\"link\":\"header_link__1hIMI\",\"active\":\"header_active__3MISQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tasks_container__2DNOh\",\"content\":\"tasks_content__12alN\",\"aside\":\"tasks_aside__3yqIx\"};"],"sourceRoot":""}